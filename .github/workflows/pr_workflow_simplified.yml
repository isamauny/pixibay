# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow locates REST API file contracts
# (Swagger or OpenAPI format, v2 and v3, JSON and YAML)
# and runs 300+ security checks on them using 42Crunch Security Audit technology.
#
# Documentation is located here: https://docs.42crunch.com/latest/content/tasks/integrate_github_actions.htm
#
# To use this workflow, you will need to complete the following setup steps.
#
# 1. Create a free 42Crunch account at https://platform.42crunch.com/register
#
# 2. Follow steps at https://docs.42crunch.com/latest/content/tasks/integrate_github_actions.htm
#    to create an API Token on the 42Crunch platform
#
# 3. Add a secret in GitHub as explained in https://docs.42crunch.com/latest/content/tasks/integrate_github_actions.htm,
#    store the 42Crunch API Token in that secret, and supply the secret's name as api-token parameter in this workflow
#
# If you have any questions or need help contact https://support.42crunch.com

name: "pr-workflow-simplified"

# follow standard Code Scanning triggers
on: 
  workflow_dispatch:

env:
  PLATFORM_URL: https://platform.42crunch.com
  PLATFORM_SERVICE_ENDPOINT: services.42crunch.com:8001

permissions:
  contents: read

jobs:
  run_42c_audit:
    environment: 42Crunch
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for 42Crunch/api-security-audit-action to upload results to Github Code Scanning
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: 42crunch-static-api-testing
        uses: 42crunch/api-security-audit-action@v3.7.0
        with:
          api-token: ${{ secrets.API_TOKEN_PRFLOW }}
          platform-url: ${{ env.PLATFORM_URL}}
          default-collection-name: Code-Scanning-MainBranch
          # Upload results to Github code scanning
          upload-to-code-scanning: true
          log-level: debug
          json-report: audit-action-report-${{ github.run_id }}
          sarif-report: 42Crunch_AuditReport_${{ github.run_id }}.SARIF
      - name: save-audit-report
        if: always()        
        uses: actions/upload-artifact@v3
        with:
          name: auditaction-report-${{ github.run_id }}
          path: audit-action-report-${{ github.run_id }}.json
          if-no-files-found: error
      - name: save-audit-sarif-file
        if: always()        
        uses: actions/upload-artifact@v3
        with:
          name: 42Crunch_AuditReport_${{ github.run_id }}
          path: 42Crunch_AuditReport_${{ github.run_id }}.SARIF
          if-no-files-found: error          
            
  # We use the output of the previous step to scan the APIs       
  run_42c_scan:
    runs-on: ubuntu-latest
    needs: run_42c_audit
    environment: 42Crunch
    permissions:
      contents: read
      actions: read
      security-events: write
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: .42c/scan/clean-report.sarif
          # Optional category for the results
          # Used to differentiate multiple results for one commit
          category: 42Crunch Dynamic Testing
      - name: save-scan-sarif-file
        if: always()        
        uses: actions/upload-artifact@v3
        with:
          name: 42Crunch_ScanReport_${{ github.run_id }}
          path: .42c/scan/scan-report.sarif
          if-no-files-found: error